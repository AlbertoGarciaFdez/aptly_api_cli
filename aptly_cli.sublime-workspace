{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"repo_ad",
				"repo_add_package_from_upload"
			],
			[
				"userPrdo",
				"userProductId"
			],
			[
				"infra",
				"infrastructure_type"
			],
			[
				"bla",
				"blue	Sass-function"
			],
			[
				"fo",
				"font-size: "
			],
			[
				"bor",
				"border-style: "
			],
			[
				"button",
				"button_value"
			],
			[
				"back",
				"background-color: "
			],
			[
				"data",
				"dataapi"
			],
			[
				"test",
				"teststaging"
			],
			[
				"udpate",
				"updateClusters"
			],
			[
				"clusterList",
				"ClusterListCtrl"
			],
			[
				"inst",
				"instance"
			],
			[
				"margin",
				"margin-left: "
			],
			[
				"padd",
				"padding-left: "
			],
			[
				"border",
				"border-width: "
			],
			[
				"color-",
				"color-style"
			],
			[
				"g",
				"generated"
			],
			[
				"image",
				"imagemin"
			],
			[
				"img-",
				"img-price-box"
			],
			[
				"coloo",
				"color-home-blue"
			],
			[
				"img-gb",
				"img-bg-section-a"
			],
			[
				"bg-gr",
				"bg-grad-stop-banner"
			],
			[
				"img-bg-",
				"img-bg-band"
			],
			[
				"wi",
				"width"
			],
			[
				"lang",
				"language"
			],
			[
				"query",
				"queryCredential"
			],
			[
				"create",
				"createdAt"
			],
			[
				"jsonTo",
				"jsonToSshStrings"
			],
			[
				"json",
				"jsonToString"
			],
			[
				"string",
				"stringify"
			],
			[
				"node",
				"node_modules"
			],
			[
				"http",
				"httpBackend"
			],
			[
				"first",
				"firstLine"
			],
			[
				"to",
				"toISOString"
			],
			[
				"markd",
				"markdown"
			],
			[
				"proposed",
				"proposedLanguage"
			],
			[
				"template",
				"templateCache"
			],
			[
				"expe",
				"expectedText"
			],
			[
				"Show",
				"Showdown"
			],
			[
				"dr",
				"directivelong	Angular.js"
			],
			[
				"ak",
				"aktualisieren"
			],
			[
				"get",
				"getHeadIdByHeading"
			],
			[
				"titl",
				"titles"
			],
			[
				"m",
				"module	AngularJS"
			],
			[
				"str",
				"strict"
			],
			[
				"con",
				"controller	AngularJS"
			],
			[
				"boo",
				"bookDetails"
			],
			[
				"book",
				"book_details"
			],
			[
				"templ",
				"templateUrl"
			],
			[
				"$route",
				"$routeProvider	AngularJS"
			],
			[
				"fun",
				"function"
			],
			[
				"fu",
				"function"
			],
			[
				"di",
				"verbose_directive	AngularJS"
			]
		]
	},
	"buffers":
	[
		{
			"file": "aptly_cli.sublime-project",
			"settings":
			{
				"buffer_size": 718,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "#! /usr/bin/env python\n# -*- coding: utf-8 -*-\n\"\"\" AptlyApiRequests\nInstances of this class will be able to talk\nto the Aptly REST API remotely.\n\"\"\"\n\nimport os\nimport sys\nimport json\nimport requests\n#from requests.exceptions import RequestException\nimp sad\n\n\nclass AptlyApiRequests(object):\n\n    \"\"\" AptlyApiRequests\n    Instances of this class will be able to talk\n    to the Aptly REST API remotely.\n    \"\"\"\n\n    def __init__(self):\n        \"\"\"\n        Pass url and port to the constructor\n        to initialize instance.\n        \"\"\"\n        basic_url = 'http://localhost'\n        port = ':9003'\n        url = basic_url + port\n\n        # self values\n        self.cfg = {\n            # Routes\n            'route_snap': url + '/api/snapshots/',\n            'route_repo': url + '/api/repos/',\n            'route_file': url + '/api/files/',\n            'route_pack': url + '/api/packages/',\n            'route_pub': url + '/api/publish/',\n            'route_graph': url + '/api/graph/',\n            'route_vers': url + '/api/version/',\n\n            # Number of packages to have left\n            'save_last_pkg': 10,\n\n            # Number of snapshots to have left\n            'save_last_snap': 3\n        }\n\n        self.headers = {'content-type': 'application/json'}\n\n    def _out(self, arg_list):\n        for y in arg_list:\n            print y\n\n    ###################\n    # LOCAL REPOS API #\n    ###################\n    def repo_create(self, repo_name, data=None):\n        \"\"\"\n        POST /api/repos\n        Create empty local repository with specified parameters ( see also aptly repo create).\n\n        JSON body params:\n        Name: required, [string] - local repository name\n        Comment: [string] - text describing local repository, for the user\n        DefaultDistribution: [string] - default distribution when publishing from this local repo\n        DefaultComponent: [string] - default component when publishing from this local repo\n\n        HTTP Errors:\n        Code  Description\n        400 repository with such name already exists\n        curl -X POST -H 'Content-Type: application/json' --data '{\"Name\": \"aptly-repo\"}' http://localhost:8080/api/repos\n        \"\"\"\n\n        if data is None:\n            post_data = {\n                'Name': repo_name\n            }\n        else:\n            post_data = {\n                'Name': repo_name,\n                'Comment': data.comment,\n                'DefaultDistribution': data.default_distribution,\n                'DefaultComponent': data.default_component\n            }\n\n        r = requests.post(self.cfg['route_repo'][:-1],\n                          data=json.dumps(post_data),\n                          headers=self.headers)\n        # r.raise_for_status()\n        resp_data = json.loads(r.content)\n        print resp_data\n        return resp_data\n\n    def repo_show(self, repo_name):\n        \"\"\"\n        SHOW\n        GET /api/repos/:name\n        Returns basic information about local repository.\n\n        HTTP Errors:\n        Code  Description\n        404 repository with such name doesn’t exist\n\n        Response:\n        Name:  [string]  local repository name\n        Comment: [string]  text describing local repository, for the user\n        DefaultDistribution: [string]  default distribution when publishing from this local repo\n        DefaultComponent:  [string]  default component when publishing from this local repo\n\n        Example:\n        $ curl http://localhost:8080/api/repos/aptly-repo\n        \"\"\"\n        r = requests.get(\n            self.cfg['route_repo'] + repo_name, headers=self.headers)\n#        r.raise_for_status()\n        resp_data = json.loads(r.content)\n        print resp_data\n        return resp_data\n\n    def repo_show_packages(self, repo_name, package_to_search=None, withDeps=0, format='compact'):\n        \"\"\"\n        SHOW PACKAGES/SEARCH\n        GET /api/repos/:name/packages\n        List all packages in local repository or perform search on repository contents and return result.\n\n        Query params:\n        q - package query, if missing - return all packages\n        withDeps - set to 1 to include dependencies when evaluating package query\n        format - result format, compact by default ( self, only package keys), details to return full information about each package ( self, might be slow on large repos)\n\n        Example:\n        $ curl http://localhost:8080/api/repos/aptly-repo/packages\n        \"\"\"\n\n        if package_to_search is None:\n            param = {\n                'withDeps': withDeps,\n                'format': format\n            }\n        else:\n            param = {\n                'q': package_to_search,\n                'withDeps': withDeps,\n                'format': format\n            }\n        url = self.cfg['route_repo'] + repo_name + '/packages'\n\n        r = requests.get(url, params=param, headers=self.headers)\n#       raise_for_status()\n        resp_data = json.loads(r.content)\n        print json.dumps(resp_data)\n        return resp_data\n\n    def repo_edit(self, repo_name, data=None):\n        \"\"\"\n        EDIT\n        PUT /api/repos/:name\n        Update local repository meta information.\n\n        JSON body params:\n        Comment: [string]  text describing local repository, for the user\n        DefaultDistribution: [string]  default distribution when publishing from this local repo\n        DefaultComponent:  [string]  default component when publishing from this local repo\n\n        HTTP Errors:\n        Code  Description\n        404 repository with such name doesn’t exist\n        Response is the same as for GET /api/repos/:name API.\n\n        Example:\n        $ curl -X PUT -H 'Content-Type: application/json' --data '{\"DefaultDistribution\": \"trusty\"}' http://localhost:8080/api/repos/local1\n        \"\"\"\n\n        if data is None:\n            data = {}\n        else:\n            data = {\n                'Comment': data.comment,\n                'DefaultDistribution': data.default_distribution,\n                'DefaultComponent': data.default_component\n            }\n\n        r = requests.put(self.cfg['route_repo'] + repo_name,\n                         data=json.dumps(data),\n                         headers=self.headers)\n        # r.raise_for_status()\n        resp_data = json.loads(r.content)\n        print resp_data\n        return resp_data\n\n    def repo_list(self):\n        \"\"\"\n        LIST\n        GET /api/repos\n        Show list of currently available local repositories. Each repository is returned as in “show” API.\n\n        Example:\n        $ curl http://localhost:8080/api/repos\n        \"\"\"\n        r = requests.get(self.cfg['route_repo'], headers=self.headers)\n#        r.raise_for_status()\n        resp_data = json.loads(r.content)\n        print json.dumps(resp_data)\n        return resp_data\n\n    def repo_delete(self, repo_name):\n        \"\"\"\n        DELETE\n        DELETE /api/repos/:name\n        Delete local repository.\n        Local repository can’t be deleted if it is published. If local repository has snapshots, aptly would refuse to delete it by default, but that can be overridden with force flag.\n\n        Query params:\n        force when value is set to 1, delete local repository even if it has snapshots\n\n        HTTP Errors:\n        Code  Description\n        404 repository with such name doesn’t exist\n        409 repository can’t be dropped ( self, reason in the message)\n        \"\"\"\n        r = requests.delete(self.cfg['route_repo'] + repo_name,\n                            headers=self.headers)\n#        r.raise_for_status()\n        resp_data = json.loads(r.content)\n        print json.dumps(resp_data)\n        return resp_data\n\n    def repo_add_package_from_upload(self, repo_name, dir_name, file_name=None, params=None):\n        \"\"\"\n        ADD PACKAGES FROM UPLOADED FILE/DIRECTORY\n        POST /api/repos/:name/file/:dir\n        POST /api/repos/:name/file/:dir/:file\n        Import packages from files ( uploaded using File Upload API) to the local repository. If directory specified, aptly would discover package files automatically.\n        Adding same package to local repository is not an error.\n        By default aptly would try to remove every successfully processed file and directory :dir ( if it becomes empty after import).\n\n        Query params:\n        noRemove - when value is set to 1, don’t remove any files\n        forceReplace - when value is set to 1, remove packages conflicting with package being added ( in local repository)\n\n        HTTP Errors:\n        404 repository with such name doesn’t exist\n\n        Response:\n        FailedFiles [][string]  list of files that failed to be processed\n        Report  object  operation report ( self, see below)\n\n        Report structure:\n        Warnings - [][string]  list of warnings\n        Added -[][string]  list of messages related to packages being added\n\n        Example ( file upload, add package to repo):\n        $ curl -X POST -F file=@aptly_0.9~dev+217+ge5d646c_i386.deb http://localhost:8080/api/files/aptly-0.9\n        \"\"\"\n        if file_name is None:\n            url = self.cfg['route_repo'] + repo_name + '/file/' + dir_name\n        else:\n            url = self.cfg['route_repo'] + repo_name + \\\n                '/file/' + dir_name + '/' + file_name\n\n        if params is not None:\n            query_param = {\n                'noRemove': param.no_remove,\n                'forceReplace': param.force_replace\n            }\n        else:\n            query_param = {\n                'noRemove': 0,\n                'forceReplace': 0\n            }\n\n        r = requests.post(url,\n                          params=query_param,\n                          headers=self.headers)\n        # r.raise_for_status()\n        resp_data = json.loads(r.content)\n        print resp_data\n        return resp_data\n\n    def repo_add_packages_by_key(self, repo_name, package_key_list):\n        \"\"\"\n        ADD PACKAGES BY KEY\n        POST /api/repos/:name/packages\n        Add packages to local repository by package keys.\n        Any package could be added, it should be part of aptly database ( it could come from any mirror, snapshot, other local repository). This API combined with package list ( search) APIs allows to implement importing, copying, moving packages around.\n        API verifies that packages actually exist in aptly database and checks constraint that conflicting packages can’t be part of the same local repository.\n\n        JSON body params:\n        PackageRefs [][string]  list of package references ( package keys)\n\n        HTTP Errors:\n        Code  Description\n        400 added package conflicts with already exists in repository\n        404 repository with such name doesn’t exist\n        404 package with specified key doesn’t exist\n        Response is the same as for GET /api/repos/:name API.\n\n        Example\n        $ curl -X POST -H 'Content-Type: application/json' --data '{\"PackageRefs\": [\"Psource pyspi 0.6.1-1.4 f8f1daa806004e89\",\"Pi386 libboost-program-options-dev 1.49.0.1 918d2f433384e378\"]}' http://localhost:8080/api/repos/repo2/packages\n        \"\"\"\n        if len(package_key_list) <= 0:\n            print 'No packages were given... aborting'\n            return\n\n        url = self.cfg['route_repo'] + repo_name + '/packages'\n        param = {\n            'PackageRefs': package_key_list\n        }\n        r = requests.post(url, data=json.dumps(param), headers=self.headers)\n        resp_data = json.loads(r.content)\n        print resp_data\n        return resp_data\n\n    def repo_delete_packages_by_key(self, repo_name, package_key_list):\n        \"\"\"\n        DELETE PACKAGES BY KEY\n        DELETE /api/repos/:name/packages\n        Remove packages from local repository by package keys.\n        Any package could be removed from local repository. List package references in local repository could be retrieved with GET /repos/:name/packages.\n\n        JSON body params:\n        PackageRefs [][string]  list of package references ( package keys)\n\n        HTTP Errors:\n        404 repository with such name doesn’t exist\n        Response is the same as for GET /api/repos/:name API.\n\n        Example:\n        $ curl -X DELETE -H 'Content-Type: application/json' --data '{\"PackageRefs\": [\"Pi386 libboost-program-options-dev 1.49.0.1 918d2f433384e378\"]}' http://localhost:8080/api/repos/repo2/packages\n        \"\"\"\n        url = self.cfg['route_repo'] + repo_name + '/packages'\n        data = {\n            'PackageRefs': package_key_list\n        }\n        r = requests.delete(url, data=json.dumps(data), headers=self.headers)\n        resp_data = json.loads(r.content)\n        print resp_data\n        return resp_data\n\n    ###################\n    # FILE UPLOAD API #\n    ###################\n\n    def file_list_directories(self):\n        \"\"\"\n        LIST DIRECTORIES\n        GET /api/files\n        List all directories.\n        Response: list of directory names.\n\n        Example:\n        $ curl http://localhost:8080/api/files\n        \"\"\"\n        r = requests.get(self.cfg['route_file'], headers=self.headers)\n        # r.raise_for_status()\n        resp_data = json.loads(r.content)\n        print json.dumps(resp_data)\n\n    def file_upload(self, dir_name, file):\n        \"\"\"\n        UPLOAD FILE\n        POST /api/files/:dir\n        Parameter :dir is upload directory name. Directory would be created if it doesn’t exist.\n        Any number of files can be uploaded in one call, aptly would preserve filenames. No check is performed if existing uploaded would be overwritten.\n        Response: list of uploaded files as :dir/:file.\n\n        Example:\n        $ curl -X POST -F file=@aptly_0.9~dev+217+ge5d646c_i386.deb http://localhost:8080/api/files/aptly-0.9\n        \"\"\"\n\n        f = {\n            'file': open(file, 'rb')\n        }\n\n        r = requests.post(self.cfg['route_file'] + dir_name,\n                          files=f)\n\n        # r.raise_for_status()\n        resp_data = json.loads(r.content)\n        print resp_data\n        return resp_data\n\n    def file_list(self, dir_name=None):\n        \"\"\"\n        LIST FILES IN DIRECTORY\n        GET /api/files/:dir\n        Returns list of files in directory.\n        Response: list of filenames.\n\n        HTTP Errors:\n        404 - directory doesn’t exist\n\n        Example:\n        $ curl http://localhost:8080/api/files/aptly-0.9\n        \"\"\"\n        if dir_name is None:\n            dir_name = ''\n\n        r = requests.get(self.cfg['route_file'] +\n                         dir_name, headers=self.headers)\n        # r.raise_for_status()\n        resp_data = json.loads(r.content)\n        print json.dumps(resp_data)\n        return resp_data\n\n    def file_delete_directory(self, dir_name):\n        \"\"\"\n        DELETE DIRECTORY\n        DELETE /api/files/:dir\n        Deletes all files in upload directory and directory itself.\n\n        Example:\n        $ curl -X DELETE http://localhost:8080/api/files/aptly-0.9\n        \"\"\"\n        r = requests.delete(\n            self.cfg['route_file'] + dir_name, headers=self.headers)\n#        r.raise_for_status()\n        resp_data = json.loads(r.content)\n        print json.dumps(resp_data)\n        return resp_data\n\n    def file_delete(self, dir_name, file_name):\n        \"\"\"\n        DELETE FILE IN DIRECTORY\n        DELETE /api/files/:dir/:file\n        Delete single file in directory.\n\n        Example:\n        $ curl -X DELETE http://localhost:8080/api/files/aptly-0.9/aptly_0.9~dev+217+ge5d646c_i386.deb\n        \"\"\"\n        r = requests.delete(\n            self.cfg['route_file'] + dir_name + '/' + file_name, headers=self.headers)\n#        r.raise_for_status()\n        resp_data = json.loads(r.content)\n        print json.dumps(resp_data)\n        return resp_data\n\n    ################\n    # SNAPSHOT API #\n    ################\n\n    def snapshot_list(self, sort='time'):\n        \"\"\"\n        LIST\n        GET /api/snapshots\n        Return list of all snapshots created in the system.\n\n        Query params:\n        sort  snapshot order, defaults to name, set to time to display in creation order\n\n        Example:\n        $ curl -v http://localhost:8080/api/snapshots\n        \"\"\"\n        params = {\n            'sort': sort\n        }\n        r = requests.get(self.cfg['route_snap'],\n                         headers=self.headers, params=params)\n#        r.raise_for_status()\n        resp_data = json.loads(r.content)\n        self._out(resp_data)\n        return resp_data\n\n    def snapshot_create_from_local_repo(self, snapshot_name, repo_name, description=None):\n        \"\"\"\n        CREATE SNAPSHOT FROM LOCAL REPO\n        POST /api/repos/:name/snapshots\n        Create snapshot of current local repository :name contents as new snapshot with name :snapname.\n\n        JSON body params:\n        Name -  [string], required  snapshot name\n        Description - [string]  free-format description how snapshot has been created\n\n        HTTP Errors:\n        Code  Description\n        400 snapshot with name Name already exists\n        404 local repo with name :name doesn’t exist\n\n        Example:\n        $ curl -X POST -H 'Content-Type: application/json' --data '{\"Name\":\"snap9\"}' http://localhost:8080/api/repos/local-repo/snapshots\n        \"\"\"\n        url = self.cfg['route_repo'] + repo_name + '/snapshots'\n        if description is None:\n            description = 'Description for ' + snapshot_name\n\n        data = {\n            'Name': snapshot_name,\n            'Description': description\n        }\n\n        r = requests.post(url, data=json.dumps(data), headers=self.headers)\n        # r.raise_for_status()\n        resp_data = json.loads(r.content)\n        print resp_data\n        return resp_data\n\n    def snapshot_create_from_package_refs(self, snapshot_name, source_snapshot_list, package_refs_list, description=None):\n        \"\"\"\n        CREATE SNAPSHOT FROM PACKAGE REFS\n        POST /api/snapshots\n        Create snapshot from list of package references.\n        This API creates snapshot out of any list of package references. Package references could be obtained from other snapshots, local repos or mirrors.\n\n        Name - [string], required  snapshot name\n        Description - [string]  free-format description how snapshot has been created\n        SourceSnapshots - [][string]  list of source snapshot names (only for tracking purposes)\n        PackageRefs - [][string]  list of package keys which would be contents of the repository\n        Sending request without SourceSnapshots and PackageRefs would create empty snapshot.\n\n        HTTP Errors:\n        400 snapshot with name Name already exists, package conflict\n        404 source snapshot doesn’t exist, package doesn’t exist\n\n        Example:\n        $ curl -X POST -H 'Content-Type: application/json' --data '{\"Name\":\"empty\"}' http://localhost:8080/api/snapshots\n        $ curl -X POST -H 'Content-Type: application/json' --data '{\"Name\":\"snap10\", \"SourceSnapshots\": [\"snap9\"], \"Description\": \"Custom\", \"PackageRefs\": [\"Psource pyspi 0.6.1-1.3 3a8b37cbd9a3559e\"]}'  http://localhost:8080/api/snapshots\n        \"\"\"\n        url = self.cfg['route_snap'][:-1]\n        if description is None:\n            description = 'Description for ' + snapshot_name\n\n        print snapshot_name\n        print description\n        print source_snapshot_list\n        print package_refs_list\n        data = {\n            'Name': snapshot_name,\n            'Description': description,\n            'SourceSnapshots': source_snapshot_list,\n            'PackageRefs': package_refs_list\n        }\n\n        r = requests.post(url, data=json.dumps(data), headers=self.headers)\n        # r.raise_for_status()\n        resp_data = json.loads(r.content)\n        print resp_data\n        return resp_data\n\n    def snapshot_update(self, old_snapshot_name, new_snapshot_name, description=None):\n        \"\"\"\n        UPDATE\n        PUT /api/snapshots/:name\n        Update snapshot’s description or name.\n\n        JSON body params:\n        Name - [string]  new snapshot name\n        Description - [string]  free-format description how snapshot has been created\n\n        HTTP Errors:\n        404 snapshot with such name doesn’t exist\n        409 rename is not possible: name already used by another snapshot\n\n        Example:\n        $ curl -X PUT -H 'Content-Type: application/json' --data '{\"Name\": \"snap-wheezy\"}' http://localhost:8080/api/snapshots/snap1\n        \"\"\"\n        url = self.cfg['route_snap'] + old_snapshot_name\n        if description is None:\n            description = 'Description for ' + new_snapshot_name\n\n        data = {\n            'Name': new_snapshot_name,\n            'Description': description\n        }\n\n        r = requests.put(url, data=json.dumps(data), headers=self.headers)\n        resp_data = json.loads(r.content)\n        print resp_data\n        return resp_data\n\n    def snapshot_show(self, snapshot_name):\n        \"\"\"\n        SHOW\n        GET /api/snapshots/:name\n        Get information about snapshot by name.\n\n        HTTP Errors:\n        Code  Description\n        404 snapshot with such name doesn’t exist\n\n        Example:\n        $ curl http://localhost:8080/api/snapshots/snap1\n        \"\"\"\n        url = self.cfg['route_snap'] + snapshot_name\n        r = requests.get(url, headers=self.headers)\n        resp_data = json.loads(r.content)\n        print resp_data\n        return resp_data\n\n    def snapshot_delete(self, snapshot_name, force='0'):\n        \"\"\"\n        DELETE\n        DELETE /api/snapshots/:name\n        Delete snapshot. Snapshot can’t be deleted if it is published. aptly would refuse to delete snapshot if it has been used as source to create other snapshots, but that could be overridden with force parameter.\n\n        Query params:\n        force -  when value is set to 1, delete snapshot even if it has been used as source snapshot\n\n        HTTP Errors:\n        404 snapshot with such name doesn’t exist\n        409 snapshot can’t be dropped (reason in the message)\n\n        Example:\n        $ curl -X DELETE http://localhost:8080/api/snapshots/snap-wheezy\n        $ curl -X DELETE 'http://localhost:8080/api/snapshots/snap-wheezy?force=1'\n        \"\"\"\n        url = self.cfg['route_snap'] + snapshot_name\n        if force == '1':\n            print 'Forcing removal of snapshot'\n\n        param = {\n            'force': force\n        }\n\n        r = requests.delete(url, params=param, headers=self.headers)\n        print r.url\n        resp_data = json.loads(r.content)\n        print resp_data\n        return resp_data\n\n    def snapshot_show_packages(self, snapshot_name, package_to_search=None, withDeps=0, format='compact'):\n        \"\"\"\n        SHOW PACKAGES/SEARCH\n        GET /api/snapshots/:name/packages\n        List all packages in snapshot or perform search on snapshot contents and return result.\n\n        Query params:\n        q - package query, if missing - return all packages\n        withDeps - set to 1 to include dependencies when evaluating package query\n        format - result format, compact by default ( only package keys), details to return full information about each package ( might be slow on large snapshots)\n\n        Example:\n        $ curl http://localhost:8080/api/snapshots/snap2/packages\n        $ curl  http://localhost:8080/api/snapshots/snap2/packages?q='Name%20( ~%20matlab)'\n        \"\"\"\n        url = self.cfg['route_snap'] + snapshot_name + '/packages'\n\n        if package_to_search is None:\n            param = {\n                'withDeps': withDeps,\n                'format': format\n            }\n        else:\n            param = {\n                'q': package_to_search,\n                'withDeps': withDeps,\n                'format': format\n            }\n\n        r = requests.get(url, params=param, headers=self.headers)\n        resp_data = json.loads(r.content)\n        print resp_data\n        return resp_data\n\n    def snapshot_diff(self, snapshot_left, snapshot_right):\n        \"\"\"\n        DIFFERENCE BETWEEN SNAPSHOTS\n        GET /api/snapshots/:name/diff/:withSnapshot\n        Calculate difference between two snapshots :name (left) and :withSnapshot (right).\n        Response is a list of elements:\n\n        Left - package reference present only in left snapshot\n        Right - package reference present only in right snapshot\n\n        If two snapshots are identical, response would be empty list.\n        null -  package reference right -  snapshot has package missing in left\n        package reference -  null -  left snapshot has package missing in right\n        package reference - package reference snapshots have different packages\n\n        Example:\n        $ curl http://localhost:8080/api/snapshots/snap2/diff/snap3\n        \"\"\"\n        url = self.cfg['route_snap'] + \\\n            snapshot_left + '/diff/' + snapshot_right\n        r = requests.get(url, headers=self.headers)\n        resp = json.loads(r.content)\n        print resp\n        return resp\n\n    ###############\n    # PUBLISH API #\n    ###############\n\n    def publish_list(self):\n        \"\"\"\n        LIST\n        GET /api/publish\n        List published repositories.\n\n        Example:\n        $ curl http://localhost:8080/api/publish\n        \"\"\"\n        url = self.cfg['route_pub']\n        r = requests.get(url, headers=self.headers)\n        resp = json.loads(r.content)\n        print resp\n        return resp\n\n    def publish(self, prefix, sources_kind, sources_list, distribution_name, component=None, label=None, origin=None, force_overwrite=None, architectures_list=None):\n        \"\"\"\n        PUBLISH SNAPSHOT/LOCAL REPO\n        POST /api/publish/:prefix\n        Publish local repository or snapshot under specified prefix. Storage might be passed in prefix as well, e.g. s3:packages/. To supply empty prefix, just remove last part (POST /api/publish)\n\n        JSON body params:\n        SourceKind - [string], required  source kind: local for local repositories and snapshot for snapshots\n        Sources -[]Source, required  list of Component/Name objects, Name is either local repository or snpashot name\n        Distribution - [string]  distribution name, if missing aptly would try to guess from sources\n        Label [string] - value of Label: field in published repository stanza\n        Origin  [string] - value of Origin: field in published repository stanza\n        ForceOverwrite - bool  when publishing, overwrite files in pool/ directory without notice\n        Architectures - [][string]  override list of published architectures\n\n        Notes on Sources field:\n        when publishing single component repository, Component may be omitted, it would be guessed from source or set to default value main\n        for multiple component published repository, Component would be guessed from source if not set\n        GPG signing would happen in aptly server, using local to server gpg binary, keyrings.\n        It’s not possible to configure publishing endpoints via API, they should be set in configuration and require aptly server restart.\n\n        HTTP errors:\n        400 prefix/distribution is already used by another published repository\n        404 source snapshot/repo hasn’t been found\n\n        Example:\n        $ curl -X POST -H 'Content-Type: application/json' --data '{\"SourceKind\": \"local\", \"Sources\": [{\"Name\": \"local-repo\"}], \"Architectures\": [\"i386\", \"amd64\"], \"Distribution\": \"wheezy\"}' http://localhost:8080/api/publish\n        $ curl -X POST -H 'Content-Type: application/json' --data '{\"SourceKind\": \"local\", \"Sources\": [{\"Name\": \"0XktRe6qMFp4b8C\", \"Component\": \"contrib\"}, {\"Name\": \"EqmoTZiVx8MGN65\", \"Component\": \"non-free\"}], \"Architectures\": [\"i386\", \"amd64\"], \"Distribution\": \"wheezy\"}' http://localhost:8080/api/publish/debian_testing/\n        \"\"\"\n        url = self.cfg['route_pub'] + prefix\n\n        if component is None:\n            print 'WARNING: Component was not given... setting to main'\n            component = 'main'\n\n        # Prepare list of sources\n        sources = []\n        comp_list = component.split()\n        list = sources_list.split()\n        if len(comp_list) != len(list):\n            print \"ERROR: sources list and components list should have same length\"\n            return\n\n        for x in list:\n            for y in comp_list:\n                row = {\n                    'Name': x,\n                    'Component': y\n                }\n        sources.append(row)\n\n        dat = {}\n        if label is None:\n            if origin is None:\n                if force_overwrite is None:\n                    if architectures_list is None:\n                        print 'simple publish'\n                        dat = {\n                            'SourceKind': sources_kind,\n                            'Sources': sources,\n                            'Distribution': distribution_name\n                        }\n        else:\n            print 'fancy publish'\n            if int(force_overwrite) <= 0:\n                fo = False\n            else:\n                fo = True\n            print fo\n            dat = {\n                'SourceKind': sources_kind,\n                'Sources': sources,\n                'Distribution': distribution_name,\n                'Architectures': architectures_list.split(),\n                'Label': label,\n                'Origin': origin,\n                'ForceOverwrite': fo\n            }\n\n        print dat\n        r = requests.post(url, data=json.dumps(dat), headers=self.headers)\n        print r.url\n        resp = json.loads(r.content)\n        print resp\n        return resp\n\n    def publish_switch(self, prefix, snapshot_list, distribution, component=None, force_overwrite=0):\n        \"\"\"\n        UPDATE PUBLISHED LOCAL REPO/SWITCH PUBLISHED SNAPSHOT\n        PUT /api/publish/:prefix/:distribution\n        API action depends on published repository contents:\n        if local repository has been published, published repository would be updated to match local repository contents\n        if snapshots have been been published, it is possible to switch each component to new snapshot\n\n        JSON body params:\n        Snapshots - []Source  only when updating published snapshots, list of objects Component/Name\n        ForceOverwrite - bool  when publishing, overwrite files in pool/ directory without notice\n\n        Example:\n        $ curl -X PUT -H 'Content-Type: application/json' --data '{\"Snapshots\": [{\"Component\": \"main\", \"Name\": \"8KNOnIC7q900L5v\"}]}' http://localhost:8080/api/publish//wheezy\n        \"\"\"\n        if prefix is None:\n            prefix = ''\n\n        if int(force_overwrite) <= 0:\n            fo = False\n        else:\n            fo = True\n\n        url = self.cfg['route_pub'] + prefix + '/' + distribution\n\n        snap_list_obj = []\n        for x in snapshot_list.split():\n            if component is not None:\n                snap_obj = {\n                    'Component': component,\n                    'Name': x\n                }\n            else:\n                snap_obj = {\n                    'Name': x\n                }\n            snap_list_obj.append(snap_obj)\n        print snap_list_obj\n        data = {\n            'Snapshots': snap_list_obj,\n            'ForceOverwrite': fo\n        }\n        r = requests.put(url, data=json.dumps(data), headers=self.headers)\n        resp = json.loads(r.content)\n        print resp\n        return resp\n\n    def publish_drop(self, prefix, distribution, force=0):\n        \"\"\"\n        DROP PUBLISHED REPOSITORY\n        DELETE /api/publish/:prefix/:distribution\n        Delete published repository, clean up files in published directory.\n\n        Query params:\n        force -  force published repository removal even if component cleanup fails\n        Usually ?force=1 isn’t required, but if due to some corruption component cleanup fails, ?force=1 could be used to drop published repository. This might leave some published repository files left under public/ directory.\n\n        Example:\n        $ curl -X DELETE http://localhost:8080/api/publish//wheezy\n        \"\"\"\n\n        url = self.cfg['route_pub'] + prefix + '/' + distribution\n\n        param = {\n            'force': force\n        }\n\n        r = requests.delete(url, params=param, headers=self.headers)\n        resp = json.loads(r.content)\n        print resp\n        return resp\n\n    ###############\n    # PACKAGE API #\n    ###############\n\n    def package_show_by_key(self, package_key):\n        \"\"\"\n        SHOW\n        GET /api/packages/:key\n        Show information about package by package key.\n        Package keys could be obtained from various GET .../packages APIs.\n\n        Response:\n        Key - [sitring]  package key (unique package identifier)\n        ShortKey - [string]  short package key (should be unique in one package list: snapshot, mirror, local repository)\n        FilesHash - [string]  hash of package files\n        Package Stanza Fields - [string]  all package stanza fields, e.g. Package, Architecture, …\n\n        HTTP Errors:\n        Code  Description\n        404 package with such key doesn’t exist\n\n        Example:\n        $ curl http://localhost:8080/api/packages/'Pi386%20libboost-program-options-dev%201.49.0.1%20918d2f433384e378'\n        Hint: %20 is url-encoded space.\n        \"\"\"\n        url = self.cfg['route_pack'] + package_key\n        r = requests.get(url, headers=self.headers)\n        resp = json.loads(r.content)\n        print resp\n        return resp\n\n    #############\n    # GRAPH API #\n    #############\n\n    def graph(self, file_ext='.png'):\n        \"\"\"\n        GET /api/graph.:ext\n        Generate graph of aptly objects ( same as in aptly graph command).\n        :ext specifies desired file extension, e.g. .png, .svg.\n\n        Example:\n        open url http://localhost:8080/api/graph.svg in browser (hint: aptly database should be non-empty)\n        \"\"\"\n        url = self.cfg['route_graph'][:-1] + file_ext\n        print url\n        r = requests.get(url, headers=self.headers)\n        resp = json.loads(r.content)\n        print resp\n        return resp\n\n    ###############\n    # VERSION API #\n    ###############\n\n    def get_version(self):\n        \"\"\"\n        GET /api/version\n        Return current aptly version.\n\n        Example:\n        $ curl http://localhost:8080/api/version\n        \"\"\"\n        url = self.cfg['route_vers']\n        r = requests.get(url, headers=self.headers)\n        resp = json.loads(r.content)\n        print resp\n        return resp\n",
			"file": "aptly_cli/api/api.py",
			"file_size": 34186,
			"file_write_time": 130918119400000000,
			"settings":
			{
				"buffer_size": 34225,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/timsusa/Library/Application Support/Sublime Text 3/Packages/User/SublimeLinter.sublime-settings",
			"settings":
			{
				"buffer_size": 3858,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/JSHint/JSHint.sublime-build",
					""
				],
				[
					"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
					""
				]
			],
			[
				"Packages/JSHint/JSHint.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 400.0,
		"last_filter": "pytho",
		"selected_items":
		[
			[
				"pytho",
				"User: Python PEP8 Autoformat"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"package",
				"Package Control: Disable Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"search",
				"File: Search Files"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"sas",
				"SassBeautify"
			],
			[
				"grunt",
				"Grunt: Kill Running Tasks"
			],
			[
				"pa",
				"Package Control: Remove Package"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"grunt ",
				"Grunt: Kill Running Tasks"
			],
			[
				"g",
				"AngularJS: Rebuild Search Index"
			],
			[
				"in",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"sass",
				"SassBeautify"
			],
			[
				"set syntax: sas",
				"Set Syntax: Sass"
			],
			[
				"",
				"AngularJS: Rebuild Search Index"
			],
			[
				"ang",
				"AngularJS: Rebuild Search Index"
			],
			[
				"packa d",
				"Package Control: Disable Package"
			],
			[
				"who",
				"WhoCalled: Add/remove project folders"
			],
			[
				"whoc",
				"WhoCalled: Add/remove project folders"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"disa",
				"Package Control: Disable Package"
			],
			[
				"upgr",
				"Package Control: Upgrade/Overwrite All Packages"
			],
			[
				"up",
				"Package Control: Upgrade/Overwrite All Packages"
			],
			[
				"ena",
				"Package Control: Enable Package"
			],
			[
				"package in",
				"Package Control: Install Package"
			],
			[
				"package control di",
				"Package Control: Disable Package"
			],
			[
				"packa",
				"Package Control: Install Package"
			],
			[
				"o",
				"Origami: Create Pane on the Right"
			],
			[
				"origami: destro",
				"Origami: Destroy Current Pane"
			],
			[
				"origami",
				"Origami: Create Pane on the Right"
			],
			[
				"file:",
				"File: Reveal"
			],
			[
				"close ",
				"File: Close All"
			],
			[
				"remove pa",
				"Package Control: Remove Package"
			],
			[
				"subli",
				"Sublimerge"
			],
			[
				"origami cre pane r",
				"Origami: Create Pane on the Right"
			],
			[
				"origami destr pane r",
				"Origami: Destroy Pane on the Right"
			],
			[
				"origami create pane r",
				"Origami: Create Pane on the Right"
			],
			[
				"orig",
				"Origami: Destroy Pane on the Right"
			],
			[
				"git blame",
				"Git: Blame"
			],
			[
				"create pane ri",
				"Origami: Create Pane on the Right"
			],
			[
				"pane",
				"Origami: Destroy Pane on the Right"
			],
			[
				"jshint",
				"JSHint"
			],
			[
				"Snippet: ",
				"Snippet: Angular.js"
			],
			[
				"ori",
				"Origami: Create Pane on the Left"
			],
			[
				"controlle",
				"Snippet: ngController"
			],
			[
				"q",
				"Git: Quick Commit"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"form",
				"Format: Javascript"
			],
			[
				"js",
				"AngularJS: Look Up Definition"
			],
			[
				"add",
				"Package Control: Add Repository"
			],
			[
				"Package Control: inst",
				"Package Control: Install Package"
			],
			[
				"Side",
				"View: Toggle Open Files in Side Bar"
			]
		],
		"width": 583.0
	},
	"console":
	{
		"height": 299.0,
		"history":
		[
			"print",
			"print $PATH",
			"echo",
			"exit",
			"eixt",
			"ls",
			"faq.html",
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/timsusa/data/development/masterhoshi/aptly_api_cli",
		"/Users/timsusa/data/development/masterhoshi/aptly_api_cli/aptly_cli",
		"/Users/timsusa/data/development/masterhoshi/aptly_api_cli/aptly_cli/api"
	],
	"file_history":
	[
		"/Users/timsusa/Library/Application Support/Sublime Text 3/Packages/User/pep8_autoformat.sublime-settings",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/templates/dialogs/payment.confirm.html",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/scripts/controllers/dataProcTutorialCtrl.js",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/scripts/controllers/credentialCtrl.js",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/scripts/services/clusterService.js",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/scripts/controllers/clusterCtrl.js",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/assets/lang/messages-en.json",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/scripts/resources/cluster.js",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/scripts/resources/cloud.js",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/assets/lang/settings-de.json",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/assets/lang/settings-en.json",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/templates/views/settings.credentials.ssh.html",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/templates/views/schema.html",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/variants/tlabs/scss/_tlabs.scss",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/variants/tlabs/scripts/conf-develop-ai.js",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/scripts/services/analyticsService.js",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/variants/generic/scripts/conf-develop.js",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/scripts/services/analyticsServiceGa.js",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/variants/generic/scripts/conf-intercloud.js",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/variants/generic/scripts/conf-local.js",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/variants/generic/scripts/conf-production.js",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/variants/generic/scripts/conf-staging.js",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/variants/generic/scripts/conf-xion.js",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/variants/tlabs/scripts/conf-production.js",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/variants/tlabs/scripts/conf-production-ai.js",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/variants/generic/scss/_style.scss",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/variants/generic/scss/_tables.scss",
		"/Users/timsusa/Desktop/altus-einarbeitung.txt",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/templates/views/cluster.status.html",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/scripts/controllers/paymentCtrl.js",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/templates/views/cluster.component.html",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/scripts/widgets/top.js",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/scripts/resources/schema.js",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/scripts/resources/channel.js",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/scripts/widgets/pricing.js",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/scripts/controllers/dataPipelineTutorialCtrl.js",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/templates/dialogs/cluster.failed.html",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/assets/lang/modal-en.json",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/templates/widgets/pricing-widget.html",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/templates/views/pricing.html",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/assets/lang/widget-de.json",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/assets/lang/widget-en.json",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/test/e2e/user.spec.js",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/scripts/resources/userbilling.js",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/scripts/widgets/runtime.js",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/index.html",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/scripts/app.js",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/test/e2e/routing.spec.js",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/scripts/controllers/userCtrl.js",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/scripts/widgets/dataApiWidget.js",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/variants/tlabs/assets/lang/widget-de.json",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/scripts/directives/track.js",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/templates/views/welcome.html",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/templates/widgets/top.html",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/templates/widgets/pricing.html",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/templates/widgets/runtime.html",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/templates/views/cluster.history.html",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/scripts/services/authService.js",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/scripts/widgets/trial.js",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/assets/lang/glossary-en.json",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/assets/lang/glossary-de.json",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/scripts/controllers/siteCtrl.js",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/docs/guide/analytics.ngdoc",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/templates/views/cluster.core.html",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/scripts/controllers/schemaCtrl.js",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/assets/lang/site-en.json",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/templates/views/cluster.interface.html",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/scripts/resources/product.js",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/test/spec/services/storageServiceSpec.js",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/scripts/controllers/interfaceCtrl.js",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/scripts/directives/iframeOnLoad.js",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/scripts/directives/stickyHeader.js",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/scripts/directives/sort.js",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/scripts/directives/paged.js",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/scripts/directives/limitTextInput.js",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/scripts/directives/helper.js",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/scripts/directives/formBuilder.js",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/templates/views/tutorial.eventbased.html",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/assets/lang/site-de.json",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/variants/generic/scss/_landing.scss",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/templates/views/help.html",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/assets/lang/cluster-en.json",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/scripts/directives/hue.js",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/Gruntfile.js",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/templates/views/tutorial.datapipeline.html",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/assets/lang/tutorial_file_based-en.md",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/assets/lang/tutorial_file_based-de.md",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/templates/widgets/ssh.html",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/variants/tlabs/scripts/conf-local.js",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/templates/views/settings.credentials.html",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/assets/lang/welcome-de.json",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/test/e2e/lambdanow.page.js",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/templates/widgets/data-api.html",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/assets/lang/messages-de.json",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/templates/directives/messages.html",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/templates/directives/userNav.html",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/variants/generic/templates/views/header.html",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/templates/views/auth.login.html",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/templates/dialogs/credential.add.ssh.html",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/scripts/directives/callState.js",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/assets/lang/help-en.json",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/assets/lang/help-de.json",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/variants/generic/scss/_messages.scss",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/assets/lang/tutorial_data-en.json",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/variants/generic/scss/_buttons.scss",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/templates/views/tutorial.dataprocessing.html",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/variants/tlabs/assets/lang/site-en.json",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/assets/lang/schema-en.json",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/assets/lang/tutorial_file_based-de.json",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/assets/lang/tutorial_data-de.json",
		"/Users/timsusa/test-curl.sh",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/variants/generic/scss/main.scss",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/scripts/resources/credential.js",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/templates/views/cluster.view.html",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/karma.conf.js",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/assets/lang/modal-de.json",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/assets/lang/schema-de.json",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/sitemap.xml",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/scripts/resources/topic.js",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/templates/dialogs/schema.remove.confirm.html",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/templates/dialogs/schema.save.confirm.html",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/scripts/controllers/markdownViewCtrl.js",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/scripts/controllers/TutorialDataProcCtrl.js",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/scripts/controllers/clusterListCtrl.js",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/templates/views/markdown.html",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/assets/lang/tutorial-en.md",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/protractor.conf.staging.js",
		"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend/app/assets/lang/tutorial-de.md"
	],
	"find":
	{
		"height": 23.0
	},
	"find_in_files":
	{
		"height": 110.0,
		"where_history":
		[
			"<current file>",
			"<project>",
			"<current file>",
			"<project>",
			"<current file>",
			"<project>",
			"<current file>",
			"<project>",
			"<current file>",
			"<project>",
			"<current file>",
			"<project>",
			"<current file>",
			"<project>",
			"<current file>",
			"<project>",
			"<current file>",
			"<project>",
			"<current file>",
			"<project>",
			"<current file>",
			"<project>",
			"<current file>",
			"<project>",
			"<current file>",
			"<project>",
			"<current file>",
			"<project>",
			"/Users/timsusa/data/development/masterhoshi/lambdanow-frontend",
			"<project>",
			"<current file>",
			"<project>",
			"<current file>",
			"<project>",
			"<current file>",
			"<project>",
			"<current file>",
			"<project>",
			"<current file>",
			"<project>",
			"<current file>",
			"<project>",
			"<current file>",
			"<project>",
			"<current file>",
			"<project>",
			"<current file>",
			"<project>",
			"<current file>",
			"<project>",
			"<current file>",
			"<project>",
			"<current file>",
			"<project>",
			"<current file>",
			"<project>",
			"<current file>",
			"<project>",
			"<current file>",
			"<project>",
			"<current file>",
			"<project>",
			"",
			"<project>",
			"/home/user/masterhoshi/frontend/app/scripts",
			"/home/user/masterhoshi/frontend",
			"<project>",
			"/home/user/masterhoshi/frontend",
			"<project>",
			"/home/user/masterhoshi/frontend",
			"<project>",
			"/home/user/masterhoshi/frontend",
			"<project>"
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"type",
			"_get_parser",
			"args",
			"security",
			"serverrole",
			"OptionParser",
			"print resp_data",
			"join",
			"delete",
			"repo_show_packages",
			"put",
			"delete",
			", )",
			"(",
			"{{string}}",
			"string",
			"Server error, please check your network connection and retry",
			"startCluster",
			"provisionSshKey",
			"debug",
			"navbar-middle",
			"nav",
			"Schema",
			"schema",
			"startCluster",
			"ngdialog1-aria-describedby",
			"controller.userPlanPrice",
			"controller.components",
			"<td class=\"line\"></td>",
			"controller.userPlanPrice",
			"controller.instanceTypes",
			"ClusterConfig",
			"pricing.pricing.userPlanPrice",
			"getUserPlanPrice()",
			"insttype",
			"changeCloud",
			"Cloud",
			"angular",
			"Product",
			"controller.user",
			"User",
			"changeCloud",
			"Cloud",
			"Cluster",
			"changeCloud",
			"Cloud",
			"controller.instanceTypes",
			"cluster",
			"controller.config",
			"runtimeWidget",
			"runtime",
			"top",
			"track=\"",
			"globals",
			"globals.analytics",
			"globals.features.analytics",
			"log(",
			"track=\"",
			"top",
			"TopWidgetCtrl",
			"topWidget",
			"toggleClusterHistory",
			".history",
			"topic",
			"'TrackingChannel'",
			"User",
			"TrackingChannel",
			"startCluster",
			"saveConfig",
			"sshKeys",
			"clusterFactory",
			"analyticsService.js",
			"storageService",
			"analyticsGaServiceGa",
			"analytics",
			"analyticsService",
			"analytictsService",
			"_trackEvent",
			"_setUserID",
			"_createAnalyticsScriptTag",
			"analyticsService",
			"setUserId",
			"analyticsService",
			"analytics",
			"track",
			"_createAnalyticsScriptTag",
			"trackEvent",
			"doTrack",
			"analytics",
			"controller.data.core.sshkey_id",
			"getSss",
			"controller.data.core.sshkey_id",
			"saveConf",
			"warnUnsavedChanges",
			"controller.data",
			"controller.config",
			"controller.data",
			"preSelInstType",
			"ClusterConfig",
			"saveConfig",
			"preselectedInstanceType",
			"storageService",
			"localStorage",
			"activeCluster",
			"ActiveCluster.data",
			"ActiveCluster",
			">= ",
			"iframeLoadedCallBack",
			"underline:",
			"underline",
			"\"interface\":",
			"interface",
			"box_intro",
			"interface",
			"show",
			"svg",
			".svg",
			"*.svg",
			"changeCl",
			"instanceTypes",
			"globals",
			"controller.instanceTypes",
			"instance",
			"\"landing-page\":",
			"\"ssh\":",
			"/html/body/div/div/div/div/div[2]/div/div/div/form/div[3]/fieldset/div[2]/div/div/div[2]",
			"DataProcTutorialCtrl",
			"ng-controller"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"        print resp_data\n        return resp_data",
			")",
			"( self, ",
			"[string]",
			"{{string}}",
			"SchemaEP",
			"userPlanPrice",
			"instanceTypes",
			"pricing.userPlanPrice",
			"pricing.instanceTypes",
			"controller.instanceTypes",
			"pricingWidget",
			"pricing",
			"PricingWidgetCtrl",
			"pricingWidget",
			"channel",
			"channelName",
			"analyticsService",
			"analyticsService.js",
			"analyticsGaService",
			"analyticsGa",
			"analyticsServiceGa",
			"activeCluster",
			"iframeOnLoadCallback",
			"dpltc",
			"DataPipelineTutorialCtrl",
			"",
			"log",
			"DataProcTutorialCtrl",
			"channels",
			"Channel",
			"Topic",
			"Schema",
			"Schema.",
			"Schema",
			"href=\"/tutorial_data",
			"translate=\"tutorial_data",
			"tutorial_data",
			"dataapi",
			"angular.element(",
			"MarkdownViewCtrl",
			"MarkdownCtrl",
			"TutorialOpenSocksCtrl",
			"<br>",
			"",
			"###",
			"",
			"#### <u>",
			"TutorialSshCtrl",
			"<pre>",
			"",
			" ",
			"",
			"### <u> ",
			"<pre>",
			"",
			"### <u> ",
			"<pre>",
			"",
			"### <u>",
			"",
			"pre>",
			"<pre",
			"<code>",
			"### <u>",
			"###",
			"",
			"#### ",
			"####",
			"",
			"Tutorial",
			"globals.features.componentOrder",
			"opensocks",
			"data_api",
			"UserPage",
			"User",
			"user",
			"+\n",
			"'",
			"3rdparty",
			"repo.testing.lambdanow.com",
			"go",
			"to",
			"page.goTo(toGoTo);",
			"LambdaNowPage",
			"",
			"msg",
			"'",
			"$font-tlabs-semi",
			"$font-tlabs-bold",
			"$font-tlabs",
			"$img-tlabs",
			"$color-tlabs-13",
			"$color-tlabs-12",
			"$color-tlabs-11",
			"$color-tlabs-10",
			"$color-tlabs-9",
			"$color-tlabs-8",
			"$color-tlabs-7",
			"$color-tlabs-4",
			"$color-tlabs-6",
			"$color-tlabs-5",
			"$color-tlabs-4",
			"$color-tlabs-3",
			"$color-grey",
			"$color-red",
			"$color-green",
			"$color-tlabs-grad-1-stop",
			"$color-tlabs-grad-1-mid",
			"$color-tlabs-grad-1-stop",
			"$color-tlabs-grad-1-mid",
			"$color-tlabs-grad-1-start",
			"$color-tlabs-grad-stop",
			"$color-tlabs-grad-start",
			"$color-tlabs-2",
			"$color-tlabs-1",
			"$color-tlabs",
			"@import '../../../bower_components",
			"'../../../",
			"../../../",
			"$font-input",
			"$color-input-18",
			"$color-input-17",
			"$color-input-16",
			"$color-input-15",
			"$color-input-14",
			"$color-input-13",
			"$color-input-12"
		],
		"reverse": false,
		"show_context": false,
		"use_buffer2": false,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "aptly_cli.sublime-project",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 718,
						"regions":
						{
						},
						"selection":
						[
							[
								316,
								316
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JSON (JavaScriptNext).tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "aptly_cli/api/api.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 34225,
						"regions":
						{
						},
						"selection":
						[
							[
								257,
								257
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 71.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/Users/timsusa/Library/Application Support/Sublime Text 3/Packages/User/SublimeLinter.sublime-settings",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3858,
						"regions":
						{
						},
						"selection":
						[
							[
								2071,
								2071
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JSON (JavaScriptNext).tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1075.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 35.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 135.0
	},
	"output.find_results":
	{
		"height": 231.0
	},
	"output.unsaved_changes":
	{
		"height": 175.0
	},
	"pinned_build_system": "Anaconda Python Builder",
	"project": "aptly_cli.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"ccallstate",
				"app/scripts/directives/callState.js"
			],
			[
				"bil",
				"app/templates/views/settings.billing.html"
			],
			[
				"pay",
				"app/templates/dialogs/payment.confirm.html"
			],
			[
				"message",
				"app/assets/lang/messages-en.json"
			],
			[
				"clusterctrl",
				"app/scripts/controllers/clusterCtrl.js"
			],
			[
				"clusterser",
				"app/scripts/services/clusterService.js"
			],
			[
				"datapro",
				"app/scripts/controllers/dataProcTutorialCtrl.js"
			],
			[
				"messages",
				"app/assets/lang/messages-en.json"
			],
			[
				"clusterserv",
				"app/scripts/services/clusterService.js"
			],
			[
				"clusterc",
				"app/scripts/controllers/clusterCtrl.js"
			],
			[
				"settgin",
				"app/templates/views/settings.credentials.ssh.html"
			],
			[
				"creden",
				"app/scripts/controllers/credentialCtrl.js"
			],
			[
				"cluster",
				"app/scripts/resources/cluster.js"
			],
			[
				"cred",
				"app/scripts/controllers/credentialCtrl.js"
			],
			[
				"settigns",
				"app/assets/lang/settings-de.json"
			],
			[
				"settings",
				"app/assets/lang/settings-en.json"
			],
			[
				"settings.cre",
				"app/templates/views/settings.credentials.ssh.html"
			],
			[
				"schema",
				"app/templates/views/schema.html"
			],
			[
				"anal",
				"app/scripts/services/analyticsService.js"
			],
			[
				"_sc",
				"app/variants/generic/scss/_style.scss"
			],
			[
				"chan",
				"app/scripts/resources/channel.js"
			],
			[
				"pricing",
				"app/scripts/widgets/pricing.js"
			],
			[
				"datap",
				"app/scripts/controllers/dataPipelineTutorialCtrl.js"
			],
			[
				"ana",
				"app/scripts/services/analyticsService.js"
			],
			[
				"channel",
				"app/scripts/resources/channel.js"
			],
			[
				"cluster.fail",
				"app/templates/dialogs/cluster.failed.html"
			],
			[
				"pricing-w",
				"app/templates/widgets/pricing-widget.html"
			],
			[
				"pricin",
				"app/scripts/widgets/pricing.js"
			],
			[
				"sty",
				"app/variants/generic/scss/_style.scss"
			],
			[
				"wid",
				"app/assets/lang/widget-de.json"
			],
			[
				"widget",
				"app/assets/lang/widget-en.json"
			],
			[
				"payment",
				"app/scripts/controllers/paymentCtrl.js"
			],
			[
				"billi",
				"app/scripts/resources/userbilling.js"
			],
			[
				"cluster.cp",
				"app/templates/views/cluster.component.html"
			],
			[
				"clusterservi",
				"app/scripts/services/clusterService.js"
			],
			[
				"top",
				"app/scripts/widgets/top.js"
			],
			[
				"widge",
				"app/assets/lang/widget-de.json"
			],
			[
				"wi",
				"app/assets/lang/widget-en.json"
			],
			[
				"widg",
				"app/assets/lang/widget-en.json"
			],
			[
				"runt",
				"app/scripts/widgets/runtime.js"
			],
			[
				"pric",
				"app/scripts/widgets/pricing.js"
			],
			[
				"cluster.st",
				"app/templates/views/cluster.status.html"
			],
			[
				"analy",
				"app/scripts/services/analyticsService.js"
			],
			[
				"app",
				"app/scripts/app.js"
			],
			[
				"cluster.com",
				"app/templates/views/cluster.component.html"
			],
			[
				"clusterctr",
				"app/scripts/controllers/clusterCtrl.js"
			],
			[
				"index",
				"app/index.html"
			],
			[
				"pri",
				"app/templates/widgets/pricing-widget.html"
			],
			[
				"cluster.sta",
				"app/templates/views/cluster.status.html"
			],
			[
				"pricing-",
				"app/templates/widgets/pricing-widget.html"
			],
			[
				"trak",
				"app/scripts/directives/track.js"
			],
			[
				"track",
				"app/scripts/directives/track.js"
			],
			[
				"clusters",
				"app/templates/views/cluster.status.html"
			],
			[
				"runtime",
				"app/templates/widgets/runtime.html"
			],
			[
				"cluster.ho",
				"app/templates/views/cluster.history.html"
			],
			[
				"cluster.comp",
				"app/templates/views/cluster.component.html"
			],
			[
				"cluster.hist",
				"app/templates/views/cluster.history.html"
			],
			[
				"auth",
				"app/scripts/services/authService.js"
			],
			[
				"tir",
				"app/scripts/widgets/trial.js"
			],
			[
				"datapr",
				"app/scripts/controllers/dataProcTutorialCtrl.js"
			],
			[
				"clusterct",
				"app/scripts/controllers/clusterCtrl.js"
			],
			[
				"inde",
				"app/index.html"
			],
			[
				"authser",
				"app/scripts/services/authService.js"
			],
			[
				"welcom",
				"app/templates/views/welcome.html"
			],
			[
				"conf-",
				"app/variants/generic/scripts/conf-intercloud.js"
			],
			[
				"cluster.core",
				"app/templates/views/cluster.core.html"
			],
			[
				"site-",
				"app/assets/lang/site-en.json"
			],
			[
				"data",
				"app/scripts/controllers/dataPipelineTutorialCtrl.js"
			],
			[
				"schemact",
				"app/scripts/controllers/schemaCtrl.js"
			],
			[
				"schema.js",
				"app/scripts/resources/schema.js"
			],
			[
				"in",
				"app/index.html"
			],
			[
				"tutor",
				"app/templates/views/tutorial.eventbased.html"
			],
			[
				"site-en",
				"app/assets/lang/site-en.json"
			],
			[
				"site-de",
				"app/assets/lang/site-de.json"
			],
			[
				"help",
				"app/templates/views/help.html"
			],
			[
				"interfa",
				"app/scripts/controllers/interfaceCtrl.js"
			],
			[
				"grunt",
				"Gruntfile.js"
			],
			[
				"welcome",
				"app/templates/views/welcome.html"
			],
			[
				"tutorial_fil",
				"app/assets/lang/tutorial_file_based-en.md"
			],
			[
				"tutorial_fi",
				"app/assets/lang/tutorial_file_based-de.md"
			],
			[
				"interfac",
				"app/templates/views/cluster.interface.html"
			],
			[
				"tut",
				"app/templates/views/tutorial.datapipeline.html"
			],
			[
				"tutori",
				"app/templates/views/tutorial.eventbased.html"
			],
			[
				"credent",
				"app/templates/views/settings.credentials.html"
			],
			[
				"cluster.c",
				"app/templates/views/cluster.component.html"
			],
			[
				"wide",
				"app/assets/lang/widget-en.json"
			],
			[
				"welco",
				"app/templates/views/welcome.html"
			],
			[
				"user.",
				"test/e2e/user.spec.js"
			],
			[
				"tuto",
				"app/templates/views/tutorial.eventbased.html"
			],
			[
				"dat",
				"app/scripts/controllers/dataProcTutorialCtrl.js"
			],
			[
				"pipe",
				"app/templates/views/tutorial.datapipeline.html"
			],
			[
				"",
				"app/scripts/controllers/clusterCtrl.js"
			],
			[
				"deve",
				"app/variants/generic/scripts/conf-develop.js"
			],
			[
				"mess",
				"app/assets/lang/messages-en.json"
			],
			[
				"sche",
				"app/templates/views/schema.html"
			],
			[
				"nav",
				"app/templates/directives/userNav.html"
			],
			[
				"head",
				"app/variants/generic/templates/views/header.html"
			],
			[
				"schemac",
				"app/scripts/controllers/schemaCtrl.js"
			],
			[
				"ssh.",
				"app/templates/dialogs/credential.add.ssh.html"
			],
			[
				"auth.lo",
				"app/templates/views/auth.login.html"
			],
			[
				"ap",
				"app/scripts/app.js"
			],
			[
				"_style",
				"app/variants/generic/scss/_style.scss"
			],
			[
				"cluster.stat",
				"app/templates/views/cluster.status.html"
			],
			[
				"_sty",
				"app/variants/generic/scss/_style.scss"
			],
			[
				"callstate",
				"app/scripts/directives/callState.js"
			],
			[
				"clusterin",
				"app/templates/views/cluster.interface.html"
			],
			[
				"cre",
				"app/scripts/controllers/credentialCtrl.js"
			],
			[
				"site",
				"app/variants/tlabs/assets/lang/site-en.json"
			],
			[
				"file",
				"app/assets/lang/tutorial_file_based-de.json"
			],
			[
				"tutorial_data",
				"app/assets/lang/tutorial_data-en.json"
			],
			[
				"sitec",
				"app/scripts/controllers/siteCtrl.js"
			],
			[
				"tutorial_da",
				"app/assets/lang/tutorial_data-en.json"
			],
			[
				"schema.",
				"app/templates/views/schema.html"
			],
			[
				"cluster.vi",
				"app/templates/views/cluster.view.html"
			],
			[
				"scheam",
				"app/scripts/resources/schema.js"
			],
			[
				"credential",
				"app/scripts/resources/credential.js"
			],
			[
				"channe",
				"app/scripts/resources/channel.js"
			],
			[
				"schem",
				"app/scripts/resources/schema.js"
			],
			[
				"tutorial",
				"app/assets/lang/tutorial_data-en.json"
			],
			[
				"schemactr",
				"app/scripts/controllers/schemaCtrl.js"
			],
			[
				"schema-de",
				"app/assets/lang/schema-de.json"
			],
			[
				"schema-en",
				"app/assets/lang/schema-en.json"
			],
			[
				"mark",
				"app/scripts/directives/markdownToHtml.js"
			],
			[
				"clusterlist",
				"app/scripts/controllers/clusterListCtrl.js"
			],
			[
				"markd",
				"app/scripts/controllers/markdownViewCtrl.js"
			],
			[
				"trial",
				"app/scripts/widgets/trial.js"
			],
			[
				"widget.h",
				"app/templates/widgets/widget.html"
			],
			[
				"const",
				"app/scripts/constants.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 242.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
